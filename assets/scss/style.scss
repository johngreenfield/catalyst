$color_3: rgba(255, 255, 255, 0.65);
$background-color_1: #f8f9fa;
$background-color_2: #2b3035;
$background-color_3: rgba(var(--bs-light-rgb), var(--bs-bg-opacity));
$background-color_4: currentColor;
$border-color_1: #495057;
$primary-light: #193b69; // Primary color for light theme
$primary-dark: #e9bf96;  // Primary color for dark theme
$primary-dark-text: #212529; // Dark text for high contrast on light backgrounds
$catalyst-danger: #c82333; // A custom, accessible danger color
$accessible-secondary-light: #5a646c; // Accessible secondary text for light theme
$accessible-secondary-dark: #b9c1c8;  // Accessible secondary text for dark theme

body {
	min-height: 100vh;
    
    /* Adds a translucent logo watermark over the page content.
   It's non-interactive so it doesn't interfere with clicks. */
	&::before {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: url('../img/icon.png') no-repeat center;
		background-size: contain;
		opacity: 0.05;
		pointer-events: none;
	}
}

.logo {
	max-width: 100px;
	height: auto;
	width: 90%;
}

header {
	.logo {
		max-width: 250px; /* Adjust this initial max-width as per your current logo size */
		height: auto;
		display: block;
		margin: 1rem auto 1rem auto;
		padding: 0 1rem;
		width: 100%;
	}
}

/* Styles the container for API results, ensuring it's readable and preserves formatting like newlines. */
#result-container {
	background-color: $background-color_1;
	border: 1px solid #dee2e6;
	border-radius: 0.25rem;
	padding: 1rem;
	min-height: 150px;
	white-space: pre-wrap;
	position: relative;

    /* Styles the placeholder text shown when the result container is empty. */
    &.is-placeholder {
        &::before {
            content: "Hi, I'm Catalyst, your executive function assistant.\AWhenever you're ready, select a tool above, and we'll dive in!";
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); // Use the theme's secondary color for better accessibility and consistency.
            color: var(--bs-secondary-color);
            font-style: italic;
            width: 90%;
            text-align: center;
        }
    }
}

/* Custom Bootstrap Component Overrides */
.btn-danger {
  // Override Bootstrap's CSS variables for .btn-danger with an accessible color
  --bs-btn-color: #fff;
  --bs-btn-bg: #{$catalyst-danger};
  --bs-btn-border-color: #{$catalyst-danger};
  --bs-btn-hover-bg: #{darken($catalyst-danger, 10%)};
  --bs-btn-hover-border-color: #{darken($catalyst-danger, 12%)};
  --bs-btn-active-bg: #{darken($catalyst-danger, 15%)};
  --bs-btn-active-border-color: #{darken($catalyst-danger, 17%)};
  --bs-btn-focus-shadow-rgb: #{red($catalyst-danger)}, #{green($catalyst-danger)}, #{blue($catalyst-danger)};
}

/* Theme-specific overrides */
[data-bs-theme=dark] {
	--bs-secondary-color: #{$accessible-secondary-dark};
	--bs-secondary-rgb: #{red($accessible-secondary-dark)}, #{green($accessible-secondary-dark)}, #{blue($accessible-secondary-dark)};
	// Override Bootstrap's global primary and link color variables
	--bs-primary: #{$primary-dark};
	--bs-primary-rgb: #{red($primary-dark)}, #{green($primary-dark)}, #{blue($primary-dark)};
	--bs-link-color: #{$primary-dark};
	--bs-link-color-rgb: #{red($primary-dark)}, #{green($primary-dark)}, #{blue($primary-dark)};
	--bs-link-hover-color: #{lighten($primary-dark, 15%)};
	--bs-link-hover-color-rgb: #{red(lighten($primary-dark, 15%))}, #{green(lighten($primary-dark, 15%))}, #{blue(lighten($primary-dark, 15%))};

	body {
		&::before {
			filter: invert(100%);
		}
	}

	.logo {
		filter: invert(100%);
	}

	#result-container {
		background-color: $background-color_2;
		border-color: $border-color_1;
	}

	// Apply custom primary color to all toggle switches when active
	.form-switch .form-check-input:checked {
		background-color: #{$primary-dark};
		border-color: #{$primary-dark};
	}

	.navbar .form-switch {
		.form-check-label { // Style the theme toggle label specifically
			color: #{$primary-dark};
		}
	}

	/* Override Bootstrap's css variables for .btn-primary */
	.btn-primary {
		// Set button text color to a dark color for accessibility on the light gold background
		--bs-btn-color: #{$primary-dark-text};
		--bs-btn-hover-color: #{$primary-dark-text};
		--bs-btn-active-color: #{$primary-dark-text};

		--bs-btn-bg: #{$primary-dark};
		--bs-btn-border-color: #{$primary-dark};
		--bs-btn-hover-bg: #{darken($primary-dark, 10%)};
		--bs-btn-hover-border-color: #{darken($primary-dark, 12%)};
		--bs-btn-active-bg: #{darken($primary-dark, 15%)};
		--bs-btn-active-border-color: #{darken($primary-dark, 17%)};
		// The focus shadow needs the RGB components of the color
		--bs-btn-focus-shadow-rgb: #{red($primary-dark)}, #{green($primary-dark)}, #{blue($primary-dark)};
	}

	.accordion {
		// When an accordion item is active/open, style it with the primary theme color.
		--bs-accordion-button-active-bg: #{$primary-dark};
		--bs-accordion-button-active-color: #{$primary-dark-text};
		// Ensure the expand/collapse icon also uses the correct color when active.
		--bs-accordion-icon-active-color: #{$primary-dark-text};
	}

	// Override disabled button states to use theme colors for consistency.
	.btn-primary:disabled, .btn-primary.disabled {
		background-color: #{$primary-dark};
		border-color: #{$primary-dark};
		color: #{$primary-dark-text};
	}
	.btn-outline-secondary:disabled, .btn-outline-secondary.disabled {
		color: #{$accessible-secondary-dark};
		border-color: #{$accessible-secondary-dark};
		background-color: transparent;
	}

	// Ensure form controls use the themed focus ring with a direct override.
	.form-control:focus, .form-select:focus {
		border-color: var(--bs-primary);
		box-shadow: 0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25);
	}
}

[data-bs-theme=light] {
	--bs-secondary-color: #{$accessible-secondary-light};
	--bs-secondary-rgb: #{red($accessible-secondary-light)}, #{green($accessible-secondary-light)}, #{blue($accessible-secondary-light)};
	// Override Bootstrap's global primary and link color variables
	--bs-primary: #{$primary-light};
	--bs-primary-rgb: #{red($primary-light)}, #{green($primary-light)}, #{blue($primary-light)};
	--bs-link-color: #{$primary-light};
	--bs-link-color-rgb: #{red($primary-light)}, #{green($primary-light)}, #{blue($primary-light)};
	--bs-link-hover-color: #{darken($primary-light, 15%)};
	--bs-link-hover-color-rgb: #{red(darken($primary-light, 15%))}, #{green(darken($primary-light, 15%))}, #{blue(darken($primary-light, 15%))};

	.navbar {
		--bs-bg-opacity: 1;
		background-color: $background-color_3 !important;
	}

	// Apply custom primary color to all toggle switches when active
	.form-switch .form-check-input:checked {
		background-color: #{$primary-light};
		border-color: #{$primary-light};
	}

	.navbar .form-switch .form-check-label { // Style the theme toggle label specifically
		color: #{$primary-light};
	}

	/* Override Bootstrap's css variables for .btn-primary */
	.btn-primary {
		--bs-btn-bg: #{$primary-light};
		--bs-btn-border-color: #{$primary-light};
		--bs-btn-hover-bg: #{darken($primary-light, 10%)};
		--bs-btn-hover-border-color: #{darken($primary-light, 12%)};
		--bs-btn-active-bg: #{darken($primary-light, 15%)};
		--bs-btn-active-border-color: #{darken($primary-light, 17%)};
		// The focus shadow needs the RGB components of the color
		--bs-btn-focus-shadow-rgb: #{red($primary-light)}, #{green($primary-light)}, #{blue($primary-light)};
	}

	.accordion {
		// When an accordion item is active/open, style it with the primary theme color.
		--bs-accordion-button-active-bg: #{$primary-light};
		--bs-accordion-button-active-color: #fff;
		// Ensure the expand/collapse icon also uses the correct color when active.
		--bs-accordion-icon-active-color: #fff;
	}

	// Override disabled button states to use theme colors for consistency.
	.btn-primary:disabled, .btn-primary.disabled {
		background-color: #{$primary-light};
		border-color: #{$primary-light};
	}
	.btn-outline-secondary:disabled, .btn-outline-secondary.disabled {
		color: #{$accessible-secondary-light};
		border-color: #{$accessible-secondary-light};
		background-color: transparent;
	}

	// Ensure form controls use the themed focus ring with a direct override.
	.form-control:focus, .form-select:focus {
		border-color: var(--bs-primary);
		box-shadow: 0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25);
	}
}

/* Animated Navbar Toggler */
.navbar-toggler {
	border: none;
	background: transparent !important;

	&:focus {
		-webkit-box-shadow: none;
		box-shadow: none;
	}

	.toggler-icon {
		width: 25px;
		height: 2px;
		background-color: $background-color_4;
		display: block;
		-webkit-transition: all 0.2s;
		transition: all 0.2s;
		position: relative;
		+ {
			.toggler-icon {
				margin-top: 5px;
			}
		}
	}

    &[aria-expanded=true] {
        .top-bar {
            -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
            top: 7px;
        }

        .middle-bar {
            opacity: 0;
        }

        .bottom-bar {
            -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
            top: -7px;
        }
    }
}

/* Copy button */
.copy-button {
	position: absolute;
	top: 0.5rem;
	right: 0.5rem;
	z-index: 10;
}

/* Scroll to bottom button */
.scroll-to-bottom-btn {
	position: fixed;
	bottom: 20px;
	right: 20px;
	z-index: 100;
	width: 50px;
	height: 50px;
	opacity: 0;
	visibility: hidden;
	-webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
	transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;

    &.show {
	    opacity: 1;
	    visibility: visible;
    }
}